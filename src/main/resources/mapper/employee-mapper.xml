<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kh.cocoa.dao.EmployeeDAO">
	<!-- 멤버십 -->
	<select id="login" resultType="String">
		select password from employee where code = #{code}
	</select>

	<select id="loginInfo" resultType="kh.cocoa.dto.EmployeeDTO">
		select * from employee where code = #{code}
	</select>

	<update id="myInfoModify">
		update employee set password = #{password}, gender = #{gender}, phone = #{phone}, address = #{address}, office_phone = #{office_phone} where code = #{code}
	</update>

	<select id="findIdByEmail" resultType="kh.cocoa.dto.EmployeeDTO">
		select code from employee where email = #{email}
</select>

	<select id="findPwByEmail" resultType="String">
		select password from employee where email = #{email} and code = #{code}
	</select>

	<update id="updateTempPw">
		update employee set password = #{password} where code = #{code}
	</update>
	<!--용국-->
	<select id="getOrganChart" resultType="kh.cocoa.dto.EmployeeDTO">
        select e.name, d.name deptname,t.name teamname from employee e inner join departments d on e.dept_code = d.code inner join team t on d.code=t.dept_code order by 2
    </select>

	<select id="getConfirmEmp" resultType="kh.cocoa.dto.EmployeeDTO">
		select e.code,e.name,d.name deptname,p.name posname from employee e inner join departments d on e.dept_code = d.code inner join position p on e.pos_code = p.code where e.code=#{code}
	</select>

	<select id="getEmpPos" resultType="kh.cocoa.dto.EmployeeDTO">
		select	e.code, e.name, p.name posname from employee e inner join position p on e.pos_code = p.code where team_code =#{code} and withdraw='N'
	</select>

    <select id="getEmpInfo" resultType="kh.cocoa.dto.EmployeeDTO">
		SELECT * FROM EMPLOYEE_VIEW2 WHERE code=#{code}
	</select>

	<select id="getTeamCount" resultType="Integer">
		select count(*) from employee where team_code=#{team_code} and WITHDRAW= 'N'
	</select>

	<select id="getTeamEmpList" resultType="kh.cocoa.dto.EmployeeDTO">
		select e.code,e.name,e.b_email,d.code dept_code,d.name deptname,p.code pos_code,p.name posname,t.name teamname from employee e
		inner join team t on e.team_code = t.code
		inner join departments d on e.dept_code = d.code
		inner join position p on e.pos_code = p.code where t.code=#{team_code} and e.WITHDRAW= 'N' order by p.code,e.name
	</select>

	<select id="getEmpNameSearchList" resultType="kh.cocoa.dto.EmployeeDTO">
		select * from employee_view where name like '%${name}%' and WITHDRAW= 'N'
	</select>

	<select	id="getDeptNameSearchList" resultType="kh.cocoa.dto.EmployeeDTO">
		select count(dept_code) count,d.code,d.name from employee
		right join departments d on d.code=dept_code where d.name like '%${name}%' and d.code not in (0) group by d.code,d.name order by d.name
	</select>

	<select id="getDeptEmpList" resultType="kh.cocoa.dto.EmployeeDTO">
		SELECT * FROM EMPLOYEE_VIEW WHERE DEPT_CODE=#{dept_code} and WITHDRAW= 'N' ORDER BY POS_CODE,NAME
	</select>

	<select id="getAllEmpListOrderByPos" resultType="kh.cocoa.dto.EmployeeDTO">
		SELECT * FROM EMPLOYEE_VIEW2 where WITHDRAW= 'N' order by pos_code, name
	</select>

	<select id="getAllEmpCount" resultType="Integer">
		SELECT COUNT(*) FROM EMPLOYEE where WITHDRAW= 'N'
	</select>

	<select id="getTeamEmp" resultType="kh.cocoa.dto.EmployeeDTO">
		SELECT * FROM EMPLOYEE_VIEW WHERE TEAM_CODE =#{team_code} and WITHDRAW= 'N'
	</select>

	<select id="getSearchEmpCode" resultType="kh.cocoa.dto.EmployeeDTO">
		SELECT * FROM EMPLOYEE WHERE NAME LIKE '%${name}%' and WITHDRAW= 'N'
	</select>

	<select id="getEmpCheckPw" resultType="Integer">
		SELECT COUNT(*) FROM EMPLOYEE WHERE CODE=#{emp_code} and PASSWORD=#{pw}
	</select>

	<update id="modInfo">
		UPDATE EMPLOYEE SET PHONE=#{phone}, OFFICE_PHONE=#{office_phone}, address=#{address}, email=#{email} where code=#{code}
	</update>

	<select id="checkUserEmail" resultType="Integer">
		SELECT COUNT(*) FROM EMPLOYEE WHERE EMAIL=#{email} AND CODE=#{code}
	</select>

	<update id="changePw">
		UPDATE EMPLOYEE SET PASSWORD=#{password} WHERE CODE=${code}
	</update>

	<select id="isWithdraw" resultType="Integer">
		SELECT COUNT(*) FROM EMPLOYEE WHERE CODE=#{code} and WITHDRAW='Y'
	</select>

	<select id="getAllEmpCode" resultType="Integer">
		SELECT CODE FROM EMPLOYEE WHERE WITHDRAW='N'
	</select>

	<select id="getAllMWEmpCode" resultType="kh.cocoa.dto.EmployeeDTO">
		SELECT E.CODE EMP_CODE,ATD.SEQ ATD_SEQ FROM EMPLOYEE E INNER JOIN ATTENDANCE ATD ON E.CODE=ATD.EMP_CODE WHERE WITHDRAW='N' AND ATD.START_TIME IS NULL AND TO_CHAR(ATD.TODAY,'YYMMDD')=TO_CHAR(NOW(),'YYMMDD') ORDER BY CODE DESC
	</select>

	<!--소형-->
	<select id="getAllEmployee" resultType="kh.cocoa.dto.EmployeeDTO">
		SELECT * FROM EMPLOYEE_VIEW ORDER BY NAME 
	</select>

	<select id="getAllEmployeeExceptMe" resultType="kh.cocoa.dto.EmployeeDTO">
		SELECT * FROM EMPLOYEE_VIEW WHERE CODE !=#{code} AND WITHDRAW = 'N' ORDER BY NAME
	</select>
	
	<select id="getDeptMember" resultType="kh.cocoa.dto.EmployeeDTO">
		SELECT * FROM EMPLOYEE WHERE DEPT_CODE = #{dept_code} and WITHDRAW = 'N'
	</select>
	
	<select id="getTeamMember" resultType="kh.cocoa.dto.EmployeeDTO">
		SELECT * FROM EMPLOYEE WHERE TEAM_CODE = #{team_code} and WITHDRAW = 'N'
	</select>
	
	<select id="getAllEmployeeOrderByCode" resultType="kh.cocoa.dto.EmployeeDTO">
		SELECT * FROM EMPLOYEE_VIEW ORDER BY CODE
	</select>
	<!-- 관리자페이지 검색 -->
 	<select id="searchEmployee" resultType="kh.cocoa.dto.EmployeeDTO">
		SELECT * FROM EMPLOYEE 
		<if test="dept_code>0 or team_code>0 or pos_code>0 or search!=null">
			WHERE 0=0
			<choose>
				<when test="searchWhat=='code' and search!=null">
					AND CODE = #{search}
				</when>
				<when test="searchWhat=='name'">
					AND NAME like '%${search}%'
				</when>
			</choose>
			
			<if test="team_code>0">
				AND TEAM_CODE = #{team_code}
			</if>
			<if test="dept_code>0">
				AND DEPT_CODE = #{dept_code}
			</if>
			<if test="pos_code>0">
				AND POS_CODE = #{pos_code}
			</if>
			
		</if> 
	</select>
	
	<!-- 관리자페이지 CRUD -->
	<insert id="addEmployee" parameterType="List">
		INSERT ALL
		<foreach collection="list" item="i">
		INTO EMPLOYEE 
		(CODE,NAME,PASSWORD,PHONE,OFFICE_PHONE,ADDRESS,EMAIL,B_EMAIL,GENDER,HIRE_DATE,WITHDRAW,DEPT_CODE,POS_CODE,TEAM_CODE) 
		VALUES 
		(FUNC_EMPLOYEE_SEQ
		, #{i.name}
		, #{i.password}
		, #{i.phone}
		, #{i.office_phone}
		, #{i.address}
		, #{i.email}
		, #{i.b_email}
		, #{i.gender}
		, #{i.hire_date}
		, #{i.withdraw}
		, #{i.dept_code}
		, #{i.pos_code}
		, #{i.team_code})
		</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<insert id="addOneEmployee">
		INSERT 
		INTO EMPLOYEE 
		(CODE,NAME,PASSWORD,PHONE,OFFICE_PHONE,ADDRESS,EMAIL,B_EMAIL,GENDER,HIRE_DATE,WITHDRAW,DEPT_CODE,POS_CODE,TEAM_CODE) 
		VALUES 
		(EMPLOYEE_SEQ.NEXTVAL
		, #{name}
		, #{password}
		, #{phone}
		, #{office_phone}
		, #{address}
		, #{email}
		, #{b_email}
		, #{gender}
		, #{i.hire_date}
		, #{withdraw}
		, #{dept_code}
		, #{pos_code}
		, #{team_code})
	</insert>
	
	<update id="updateEmployee" parameterType="List">
		<foreach collection="list" item="i" index="index" 
      separator=";" open="DECLARE BEGIN" close="; END;">
			UPDATE EMPLOYEE
			SET
				NAME=#{i.name}
				,PHONE=#{i.phone}
				,OFFICE_PHONE=#{i.office_phone}
				,ADDRESS=#{i.address}
				,EMAIL=#{i.email}
				,B_EMAIL=#{i.b_email}
				,GENDER=#{i.gender}
				,HIRE_DATE=#{i.hire_date}
				,WITHDRAW=#{i.withdraw}
				,DEPT_CODE=#{i.dept_code}
				,POS_CODE=#{i.pos_code}
				,TEAM_CODE=#{i.team_code} 
			WHERE CODE = #{i.code}
		</foreach>
	</update>
	
	<update id="updateWithdraw" parameterType="List">
		<foreach collection="list" item="i" index="index" 
      separator=";" open="DECLARE BEGIN" close="; END;">
				UPDATE EMPLOYEE 
				SET
					PHONE=NULL
					,OFFICE_PHONE=NULL
					,ADDRESS=NULL
					,EMAIL=NULL
					,B_EMAIL=NULL
					,WITHDRAW='Y'
				WHERE CODE = #{i.code}
		</foreach>
	</update>
	<!-- 메신저 이름 가져오기 -->
	<select id="getEmpNameByCode" resultType="String">
		SELECT NAME FROM EMPLOYEE WHERE CODE = #{code}
	</select>
	<!-- 소형 끝 -->
	<!-- 지영  -->
	<!--  버그리포트 -->
	<select id="getSenderEmail" resultType="kh.cocoa.dto.EmployeeDTO">
		SELECT * FROM EMPLOYEE WHERE CODE=#{writer_code}
	</select>
	<!--의진-->
	<select id="searchEmployeeByName" resultType="kh.cocoa.dto.EmployeeDTO">
		SELECT * FROM EMPLOYEE_VIEW WHERE NAME LIKE '%${contents}%' AND CODE!=#{code} AND WITHDRAW = 'N' ORDER BY NAME
	</select>
	<select id="searchEmployeeByDeptname" resultType="kh.cocoa.dto.EmployeeDTO">
		SELECT * FROM EMPLOYEE_VIEW WHERE DEPTNAME LIKE '%${contents}%' AND CODE!=#{code} AND WITHDRAW = 'N' ORDER BY DEPTNAME,NAME
	</select>
	<select id="searchEmployeeByTeamname" resultType="kh.cocoa.dto.EmployeeDTO">
		SELECT * FROM EMPLOYEE_VIEW WHERE TEAMNAME LIKE '%${contents}%' AND CODE!=#{code} AND WITHDRAW = 'N' ORDER BY TEAMNAME,NAME
	</select>

	<!-- 효경 -->
	<select id="isEmailExist" resultType="Integer">
		SELECT COUNT(*) FROM EMPLOYEE WHERE B_EMAIL=#{email}
	</select>
	<select id="getB_Email" resultType="String">
		SELECT B_EMAIL FROM EMPLOYEE WHERE CODE=#{seq}
	</select>
	<select id="getEmpleLTU" resultType="kh.cocoa.dto.EmployeeDTO">
		SELECT DEPARTMENTS.CODE "deptCode", DEPARTMENTS.NAME "deptname",TEAM.CODE "teamCode", TEAM.NAME "teamname", POSITION.CODE "posCode", POSITION.NAME "posname", EMPLOYEE.*, LEAVE_TAKEN_USED.* 
		    FROM EMPLOYEE LEFT JOIN TEAM
		    ON EMPLOYEE.TEAM_CODE = TEAM.CODE, DEPARTMENTS, POSITION, LEAVE_TAKEN_USED
		    WHERE DEPARTMENTS.CODE = EMPLOYEE.DEPT_CODE
		        AND POSITION.CODE = EMPLOYEE.POS_CODE
		        AND LEAVE_TAKEN_USED.EMP_CODE = EMPLOYEE.CODE
		        AND EMPLOYEE.WITHDRAW = 'N'
		    ORDER BY LEAVE_TAKEN_USED.YEAR DESC, DEPARTMENTS.CODE, TEAM.CODE, POSITION.CODE, EMPLOYEE.NAME
	</select>
	<select id="getListWithdrawN" resultType="kh.cocoa.dto.EmployeeDTO">
		SELECT * FROM EMPLOYEE WHERE WITHDRAW='N' ORDER BY NAME
	</select>
</mapper>